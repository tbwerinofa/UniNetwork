@model ProfileViewModel


<fieldset class="npo-capture-section qsncategorypanel 2" data-sectionordinal="3" id="fst-step-3">
    <legend></legend>

    <div id="step-1" data-currentstep="1" class="registerstep">
        <div id="regstepElement_1">


            <form area="PartialCare" action="/Admin/Project/Manage" class="form-horizontal qsnattributepanel" id="form-general" method="post" role="form" novalidate>
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <input type="hidden" id="Id" name="Id" value="@Model.Id" />
                <input type="hidden" id="Ordinal" name="Ordinal" value="2" />
                <div class="card card-info">
                    <div class="card-header form-heading">
                        <h4 class="card-title">
                            Business Information
                        </h4>

                    </div>
                    <div class="card-body">

                        @*@Html.Partial("_ValidationSummary")*@

                        <div class="row">
                            <div class="col-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Company, htmlAttributes: ModelConstant.LabelRequired)
                                    <div class="col-8">
                                        @Html.EditorFor(model => model.Company, new { htmlAttributes = ModelConstant.FormControlInp })
                                        @Html.ValidationMessageFor(model => model.Company)
                                    </div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: ModelConstant.LabelRequired)
                                    <div class="col-8">
                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 7 })
                                        @Html.ValidationMessageFor(model => model.Description)
                                    </div>
                                </div>

                            </div>
                        </div>


                    </div>

                   

                </div>
                <div class="card">

                    <div class="card-header form-heading">
                        <h4 class="card-title">
                            Address Information
                        </h4>

                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6">
                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Address.Line1, htmlAttributes: new { @class = ModelConstant.LabelRequired })
                                    <div class="col-8">
                                        @Html.TextBoxFor(m => m.Address.Line1, new { @class = ModelConstant.FormControlInp })
                                        @Html.ValidationMessageFor(m => m.Address.Line1)
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Address.Line2, htmlAttributes: new { @class = ModelConstant.LabelStandard })
                                    <div class="col-8">
                                        @Html.TextBoxFor(m => m.Address.Line2, new { @class = ModelConstant.FormControlInp })
                                        @Html.ValidationMessageFor(m => m.Address.Line2)
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Address.CountryId, htmlAttributes: ModelConstant.LabelRequired)
                                    <div class="col-8">
                                        @Html.DropDownListFor(m => m.Address.CountryId, Model.Address.Countries, htmlAttributes: ModelConstant.FormControlInp)
                                        @Html.ValidationMessageFor(model => model.Address.CountryId)
                                    </div>
                                </div> <!--Nationality-->


                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Address.ProvinceId, htmlAttributes: new { @class = ModelConstant.LabelRequired })
                                    <div class="col-8">
                                        @Html.DropDownListFor(m => m.Address.ProvinceId, Model.Address.Provinces, htmlAttributes: new { @class = ModelConstant.FormControlInp })
                                        @Html.ValidationMessageFor(model => model.Address.ProvinceId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-6">


                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Address.CityId, htmlAttributes: new { @class = ModelConstant.LabelRequired })
                                    <div class="col-8">
                                        @Html.DropDownListFor(m => m.Address.CityId, Model.Address.Cities, htmlAttributes: new { @class = ModelConstant.FormControlInp })
                                        @Html.ValidationMessageFor(m => m.Address.CityId)
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Address.TownId, htmlAttributes: new { @class = ModelConstant.LabelRequired })
                                    <div class="col-8">
                                        @Html.DropDownListFor(m => m.Address.TownId, Model.Address.Towns, htmlAttributes: new { @class = ModelConstant.FormControlInp })
                                        @Html.ValidationMessageFor(model => model.Address.TownId)
                                    </div>
                                </div>


                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Address.SuburbId, htmlAttributes: new { @class = ModelConstant.LabelRequired })
                                    <div class="col-8">
                                        @Html.DropDownListFor(m => m.Address.SuburbId, Model.Address.Suburbs, htmlAttributes: new { @class = ModelConstant.FormControlInp })
                                        @Html.ValidationMessageFor(model => model.Address.SuburbId)
                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>

                </div>
                    <div class="card-footer">
                        <input id="btn-save-business" class="btn btn-primary btn-navigation" type="button" data-navigation="finish" value="Save and Continue" style="margin-right: 5px;">
                    </div> <!--Navigation buttons-->
</form>


        </div>
    </div>
</fieldset><!--fieldset general info-->


